package com.mingh.learn;

/**
 * @ClassName DesignExample
 * @Author Hai.Ming
 * @Date 2021/6/23 23:28
 * @Version 1.0
 * @Description 设计模式
 */
public interface DesignExample {

    /**
     * @Author:  Hai.Ming
     * @Date:  2021/6/23 23:31
     * @Description:  设计模式产生背景
     * 1. 设计模式最初并不是出现在软件设计中, 而是被用于建筑领域的设计中
     * 2. 1990 年软件工程界开始研讨设计模式的话题, 后来召开了多次关于设计模式的研讨会。直到 1995 年, 由四位作者
     *     合作出版了<<设计模式: 可复用面向对象软件的基础>> 一书, 此书中收录了 23 种设计模式, 这是设计模式领域里
     *     程碑事件。这四位作者在软件开发领域以 GoF(Gong of Four) 著称。
     */
    void designBackground();

    /**
     * @Author:  Hai.Ming
     * @Date:  2021/6/23 23:53
     * @Description:  设计模式优缺点
     * 1. 优点
     * a. 使程序设计更加标准化, 代码编制更加工程化; 提高开发效率, 缩短开发周期
     * b. 使代码重用性, 拓展性和维护性
     * c. 同时也可提高程序员的思维能力, 编程能力和设计能力
     * 2. 缺点
     * 增大工作量
     */
    void designFeature();

    /**
     * @Author:  Hai.Ming
     * @Date:  2021/6/24 0:04
     * @Description:  设计模式分类
     * 1. 创建型模式
     *  用于描述如何创建对象, 主要特点是将对象的创建和使用分离。
     *  GoF 书中提供了: 单例, 原型, 工厂方法, 抽象工厂, 建造者 5 种创建型模式
     * 2. 结构型模式
     * 用于描述如何将类或对象按照某种布局组成更大的结构。
     * GoF 书中提供了: 代理, 适配器, 桥接, 组合, 装饰, 亨元, 外观 7 种结构型模式
     * 3. 行为型模式
     * 用于描述类或对象之间怎样协作完成单个对象无法完成的任务, 以及如何分配职责。
     * GoF 书中提供了: 模板方法, 策略, 命令, 职责链, 状态, 观察者, 中介者, 访问者, 迭代器, 解释器, 备忘录 11 种行为型模式
     */
    void designModel();
}
